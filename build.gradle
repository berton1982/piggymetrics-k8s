buildscript {
    dependencies {
        classpath 'org.testcontainers:postgresql:1.11.4'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE' apply false
    id 'com.google.protobuf' version '0.8.10' apply false
    id 'com.google.cloud.tools.jib' version '1.3.0' apply false
    id 'nu.studer.jooq' version '3.0.3' apply false
}

ext {
    ver = [
            springCloud              : 'Greenwich.SR2',
            springSecurityOauth      : '2.3.4.RELEASE',
            dbsetup                  : '2.1.0',
            moneta                   : '1.3',
            jacksonDatatypeMoney     : '1.0.1',
            lombok                   : '1.18.8',
            guava                    : '28.0-jre',
            assertjDb                : '1.2.0',
            commonsValidator         : '1.6',
            junit                    : '5.5.0',
            commonsIo                : '2.6',
            shedlock                 : '2.5.0',
            simpleJavaMail           : '5.0.3',
            testcontainers           : '1.11.4',
            postgresql               : '42.2.5',
            grpc                     : '1.21.0',
            reactiveGrpc             : '0.10.0',
            protobuf                 : '3.8.0',
            grpcSpringBoot           : '2.4.0.RELEASE',
            protobufSpringCloudStream: '0.0.2'
    ]

    database = [
            driver  : 'org.testcontainers.jdbc.ContainerDatabaseDriver',
            url     : 'jdbc:tc:postgresql:10.7-alpine://localhost/databasename?TC_INITFUNCTION=com.github.galleog.liquibase.tc.LiquibaseUpdater::update',
            username: 'test',
            password: 'test'
    ]
}

allprojects {
    apply plugin: 'idea'

    group = 'com.github.galleog.piggymetrics'
    version = '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs = ['-Xlint:none']
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${ver.springCloud}"
            mavenBom "org.junit:junit-bom:${ver.junit}"
        }

        dependencies {
            dependency "org.springframework.security.oauth:spring-security-oauth2:${ver.springSecurityOauth}"
            dependency "io.grpc:grpc-netty:${ver.grpc}"
            dependency "io.grpc:grpc-protobuf:${ver.grpc}"
            dependency "io.grpc:grpc-stub:${ver.grpc}"
            dependency "io.grpc:grpc-services:${ver.grpc}"
            dependency "io.grpc:grpc-testing:${ver.grpc}"
            dependency "com.google.protobuf:protobuf-java:${ver.protobuf}"
            dependency "com.google.protobuf:protobuf-java-util:${ver.protobuf}"
            dependency "com.salesforce.servicelibs:reactor-grpc-stub:${ver.reactiveGrpc}"
            dependency "com.ninja-squad:DbSetup:${ver.dbsetup}"
            dependency "org.javamoney:moneta:${ver.moneta}"
            dependency "org.zalando:jackson-datatype-money:${ver.jacksonDatatypeMoney}"
            dependency "com.google.guava:guava:${ver.guava}"
            dependency "org.assertj:assertj-db:${ver.assertjDb}"
            dependency "commons-validator:commons-validator:${ver.commonsValidator}"
            dependency "commons-io:commons-io:${ver.commonsIo}"
            dependency "net.javacrumbs.shedlock:shedlock-spring:${ver.shedlock}"
            dependency "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:${ver.shedlock}"
            dependency "org.simplejavamail:simple-java-mail:${ver.simpleJavaMail}"
            dependency "org.projectlombok:lombok:${ver.lombok}"
            dependency "org.testcontainers:postgresql:${ver.testcontainers}"
            dependency "org.testcontainers:junit-jupiter:${ver.testcontainers}"
            dependency "org.postgresql:postgresql:${ver.postgresql}"
            dependency "net.devh:grpc-server-spring-boot-starter:${ver.grpcSpringBoot}"
            dependency "net.devh:grpc-client-spring-boot-starter:${ver.grpcSpringBoot}"
            dependency "io.disc99:protocol-buffers-spring-cloud-stream-starter:${ver.protobufSpringCloudStream}"
        }
    }

    ext.aspectj = { destDir, aspectPath, inpath, classpath ->
        ant.taskdef(
                resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
                classpath: configurations.ajc.asPath
        )

        ant.iajc(
                maxmem: "512m", fork: "true", Xlint: "ignore",
                destDir: destDir,
                aspectPath: aspectPath,
                inpath: inpath,
                classpath: classpath,
                source: project.sourceCompatibility,
                target: project.targetCompatibility
        )
    }

    test {
        useJUnitPlatform()
    }
}