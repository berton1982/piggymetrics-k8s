apply plugin: 'org.springframework.boot'

description = 'statistics-service'

configurations {
    ajc
    aspects
    compile {
        extendsFrom aspects
    }
}

dependencies {
    compile(
            project(':piggymetrics-core'),
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.cloud:spring-cloud-starter-oauth2',
            'org.springframework.cloud:spring-cloud-starter-openfeign',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.cloud:spring-cloud-starter-kubernetes-config',
            'org.apache.commons:commons-lang3',
            'org.javamoney:moneta',
            'org.jadira.usertype:usertype.core',
            'org.zalando:jackson-datatype-money',
            'org.liquibase:liquibase-core',
            'com.google.guava:guava',
            'org.aspectj:aspectjrt',
            'org.aspectj:aspectjweaver',
            'org.postgresql:postgresql',
    )

    compileOnly(
            'org.projectlombok:lombok'
    )

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile(
            'org.springframework.security:spring-security-test',
            'org.testcontainers:postgresql',
            'org.testcontainers:junit-jupiter',
            'com.ninja-squad:DbSetup',
            'org.assertj:assertj-db',
            'name.falgout.jeffrey.testing.junit5:mockito-extension',
            'org.junit.jupiter:junit-jupiter-api',
            'org.junit.jupiter:junit-jupiter-params'
    )

    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine'
    )

    ajc(
            "org.aspectj:aspectjtools"
    )
    aspects(
            "org.springframework:spring-aspects"
    )
}

compileJava {
    doLast {
        aspectj project.sourceSets.main.output.classesDir.absolutePath,
                configurations.aspects.asPath,
                project.sourceSets.main.output.classesDir.absolutePath,
                configurations.compile.asPath
    }
}