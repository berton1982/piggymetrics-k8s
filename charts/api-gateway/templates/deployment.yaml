apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "api-gateway.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app.kubernetes.io/name: {{ include "api-gateway.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ default "default" .Values.global.pgm.serviceAccount }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
            {{- if .Values.debug.enabled }}
              value: "-XX:+PrintFlagsFinal -XX:MaxRAMPercentage=50.0 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address={{ default 5005 .Values.debug.port }}"
            {{- else }}
              value: "-XX:+PrintFlagsFinal -XX:MaxRAMPercentage=50.0"
            {{- end }}
            - name: ACCOUNT_SERVICE_HOST
              value: {{ .Release.Name }}-account-service.{{ .Release.Namespace }}.svc.cluster.local
            - name: ACCOUNT_SERVICE_PORT
              value: {{ .Values.global.pgm.accountService.port | quote }}
            - name: KEYCLOAK_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.keycloak.configMap }}
                  key: keycloak-host
            - name: KEYCLOAK_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.keycloak.configMap }}
                  key: keycloak-port
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ default 1 .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ default 3 .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ default 1 .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ default 3 .Values.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
